import sys
n,m=map(int,input().split())
map_data = [list(map(int,sys.stdin.readline().split())) for _ in range(n)]

#ㅣ 모양; 2가지
t1 =[[[0,0],[1,0],[2,0],[3,0]],
     [[0,0],[0,1],[0,2],[0,3]]]

#ㅁ 모양; 1가지
t2 = [[[0,0],[0,1],[1,0],[1,1]]]

#ㄴ 모양; 8가지
t3 =[[[0,0],[1,0],[2,0],[2,-1]],
     [[0,0],[0,-1],[1,0],[2,0]],
     [[0,0],[1,0],[2,0],[2,1]],
     [[0,0],[1,0],[2,0],[0,1]],
     [[0,0],[0,-1],[0,-2],[1,0]],
     [[0,0],[-1,0],[0,-1],[0,-2]],
     [[0,0],[-1,0],[0,1],[0,2]],
     [[0,0],[1,0],[0,1],[0,2]]]

#z 모양; 4가지
t4 = [[[0,0],[1,0],[1,1],[2,1]],
      [[0,0],[0,1],[-1,1],[-1,2]],
      [[0,0],[1,0],[1,-1],[2,-1]],
      [[0,0],[0,1],[1,1],[1,2]]]

#ㅗ 모양; 4가지
t5 = [[[0,0],[0,1],[0,2],[1,1]],
      [[0,0],[0,1],[-1,1],[1,1]],
      [[0,0],[0,1],[0,2],[-1,1]],
      [[0,0],[1,0],[2,0],[1,1]]]

all_case=t1+t2+t3+t4+t5
max_sum=0
#(n x m)의 경우에 대해서 비교
for i in range(n):
    for j in range(m):
        #모든 경우 중 블럭 하나 골라서 가져오기
        for tet in all_case:
            #좌표의 합을 임시로 저장하는 변수
            tmp=0
            #블럭의 각 좌표에 대해서
            for tet_pos in tet:
                nx=i+tet_pos[0]
                ny=j+tet_pos[1]
                #범위를 넘어가지 않으면
                if 0<=nx<n and 0<=ny<m:
                    #tmp에 map_data의 [nx][ny]좌표 해당 값 더하기
                    tmp+=map_data[nx][ny]
                else:
                    break
            #max_sum에 tmp와 전에 저장되 max_sum중 큰수 저장
            max_sum=max(max_sum,tmp)
print(max_sum)